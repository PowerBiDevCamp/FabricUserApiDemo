//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FabricUserApiDemo.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FabricUserApiDemo.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import requests
        ///from notebookutils import mssparkutils
        ///
        ///csv_base_url = &quot;https://github.com/PowerBiDevCamp/ProductSalesData/raw/main/&quot;
        ///
        ///csv_files = { &quot;Customers.csv&quot;, &quot;Products.csv&quot;, &quot;Invoices.csv&quot;, &quot;InvoiceDetails.csv&quot; }
        ///
        ///folder_path = &quot;Files/bronze_landing_layer/&quot;
        ///
        ///for csv_file in csv_files:
        ///    csv_file_path = csv_base_url + csv_file
        ///    with requests.get(csv_file_path) as response:
        ///        csv_content = response.content.decode(&apos;utf-8-sig&apos;)
        ///        mssparkutils.fs.put(folder_path + csv_file,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CopyFilesToBronzeLayer_py {
            get {
                return ResourceManager.GetString("CopyFilesToBronzeLayer_py", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to from datetime import date
        ///import pandas as pd
        ///from pyspark.sql.functions import to_date, year, month, dayofmonth, dayofweek, date_format, current_date
        ///from pyspark.sql.functions import concat_ws, floor, datediff, current_date, col
        ///
        ///from pyspark.sql import SparkSession
        ///spark = SparkSession.builder.appName(&quot;abc&quot;).getOrCreate()
        ///
        ///# load DataFrame from silver layer table
        ///df_gold_products = (
        ///    spark.read
        ///         .format(&quot;delta&quot;)
        ///         .load(&quot;Tables/silver_products&quot;)
        ///)
        ///
        ///# write DataFrame to n [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateGoldLayerTables_py {
            get {
                return ResourceManager.GetString("CreateGoldLayerTables_py", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;nbformat&quot;: 4,
        ///  &quot;nbformat_minor&quot;: 5,
        ///  &quot;metadata&quot;: {
        ///    &quot;language_info&quot;: {
        ///      &quot;name&quot;: &quot;python&quot;
        ///    },
        ///    &quot;a365ComputeOptions&quot;: null,
        ///    &quot;sessionKeepAliveTimeout&quot;: 0,
        ///    &quot;trident&quot;: {
        ///      &quot;lakehouse&quot;: {
        ///        &quot;default_lakehouse&quot;: &quot;{LAKEHOUSE_ID}&quot;,
        ///        &quot;default_lakehouse_name&quot;: &quot;{LAKEHOUSE_NAME}&quot;,
        ///        &quot;default_lakehouse_workspace_id&quot;: &quot;{WORKSPACE_ID}&quot;,
        ///        &quot;known_lakehouses&quot;: [
        ///          {
        ///            &quot;id&quot;: &quot;{LAKEHOUSE_ID}&quot;
        ///          }
        ///        ]
        ///      }
        ///    }
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateLakehouseTables_ipynb {
            get {
                return ResourceManager.GetString("CreateLakehouseTables_ipynb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Synapse Analytics notebook source
        ///
        ///# METADATA ********************
        ///
        ///# META {
        ///# META   &quot;synapse&quot;: {
        ///# META     &quot;lakehouse&quot;: {
        ///# META       &quot;default_lakehouse&quot;: &quot;{LAKEHOUSE_ID}&quot;,
        ///# META       &quot;default_lakehouse_name&quot;: &quot;{LAKEHOUSE_NAME}&quot;,
        ///# META       &quot;default_lakehouse_workspace_id&quot;: &quot;{WORKSPACE_ID}&quot;,
        ///# META       &quot;known_lakehouses&quot;: [
        ///# META         {
        ///# META           &quot;id&quot;: &quot;{LAKEHOUSE_ID}&quot;
        ///# META         }
        ///# META       ]
        ///# META     }
        ///# META   }
        ///# META }
        ///
        ///# CELL ********************
        ///
        ///# copy CSV files to la [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateLakehouseTables_py {
            get {
                return ResourceManager.GetString("CreateLakehouseTables_py", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # create products table for silver layer
        ///from pyspark.sql.types import StructType, StructField, StringType, LongType, FloatType, DateType
        ///
        ///from pyspark.sql import SparkSession
        ///spark = SparkSession.builder.appName(&quot;abc&quot;).getOrCreate()
        ///
        ///# create schema for products table using StructType and StructField 
        ///schema_products = StructType([
        ///    StructField(&quot;ProductId&quot;, LongType() ),
        ///    StructField(&quot;Product&quot;, StringType() ),
        ///    StructField(&quot;Category&quot;, StringType() )
        ///])
        ///
        ///# Load CSV file into Spark Data [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CreateSilverLayerTables_py {
            get {
                return ResourceManager.GetString("CreateSilverLayerTables_py", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;name&quot;: &quot;CY23SU08&quot;,
        ///  &quot;dataColors&quot;: [
        ///    &quot;#118DFF&quot;,
        ///    &quot;#12239E&quot;,
        ///    &quot;#E66C37&quot;,
        ///    &quot;#6B007B&quot;,
        ///    &quot;#E044A7&quot;,
        ///    &quot;#744EC2&quot;,
        ///    &quot;#D9B300&quot;,
        ///    &quot;#D64550&quot;,
        ///    &quot;#197278&quot;,
        ///    &quot;#1AAB40&quot;,
        ///    &quot;#15C6F4&quot;,
        ///    &quot;#4092FF&quot;,
        ///    &quot;#FFA058&quot;,
        ///    &quot;#BE5DC9&quot;,
        ///    &quot;#F472D0&quot;,
        ///    &quot;#B5A1FF&quot;,
        ///    &quot;#C4A200&quot;,
        ///    &quot;#FF8080&quot;,
        ///    &quot;#00DBBC&quot;,
        ///    &quot;#5BD667&quot;,
        ///    &quot;#0091D5&quot;,
        ///    &quot;#4668C5&quot;,
        ///    &quot;#FF6300&quot;,
        ///    &quot;#99008A&quot;,
        ///    &quot;#EC008C&quot;,
        ///    &quot;#533285&quot;,
        ///    &quot;#99700A&quot;,
        ///    &quot;#FF4141&quot;,
        ///    &quot;#1F9A85&quot;,
        ///    &quot;#25891C&quot;,
        ///    &quot;#0057A2&quot;,
        ///    &quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CY23SU08_json {
            get {
                return ResourceManager.GetString("CY23SU08_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;version&quot;: &quot;1.0&quot;,
        ///  &quot;settings&quot;: {}
        ///}.
        /// </summary>
        internal static string definition_pbidataset {
            get {
                return ResourceManager.GetString("definition_pbidataset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;version&quot;: &quot;1.0&quot;,
        ///  &quot;datasetReference&quot;: {
        ///    &quot;byPath&quot;: null,
        ///    &quot;byConnection&quot;: {
        ///      &quot;connectionString&quot;: null,
        ///      &quot;pbiServiceModelId&quot;: null,
        ///      &quot;pbiModelVirtualServerName&quot;: &quot;sobe_wowvirtualserver&quot;,
        ///      &quot;pbiModelDatabaseName&quot;: &quot;{SEMANTIC_MODEL_ID}&quot;,
        ///      &quot;name&quot;: &quot;EntityDataSource&quot;,
        ///      &quot;connectionType&quot;: &quot;pbiServiceXmlaStyleLive&quot;
        ///    }
        ///  }
        ///}
        ///
        ///
        ///
        ///.
        /// </summary>
        internal static string definition_pbir {
            get {
                return ResourceManager.GetString("definition_pbir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///
        ///&lt;head&gt;
        ///  &lt;meta charset=&quot;utf-8&quot; /&gt;
        ///  &lt;title&gt;@AppName&lt;/title&gt;
        ///  &lt;link href=&quot;css/styles.css&quot; rel=&quot;stylesheet&quot; /&gt;
        ///  &lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt;
        ///  &lt;script src=&quot;js/powerbi.js&quot;&gt;&lt;/script&gt;
        ///&lt;/head&gt;
        ///
        ///&lt;body&gt;
        ///
        ///  &lt;div id=&quot;embedContainer&quot; /&gt;
        ///
        ///  &lt;script&gt;
        ///
        ///    // data required for embedding Power BI report
        ///    var embedReportId = &quot;@EmbedReportId&quot;;
        ///    var embedUrl = &quot;@EmbedUrl&quot;;
        ///    var accessToken = &quot;@EmbedToken&quot;;
        ///
        ///    // Get models object to  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EmbedReport_html {
            get {
                return ResourceManager.GetString("EmbedReport_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////*!
        /// * jQuery JavaScript Library v3.7.1
        /// * https://jquery.com/
        /// *
        /// * Copyright OpenJS Foundation and other contributors
        /// * Released under the MIT license
        /// * https://jquery.org/license
        /// *
        /// * Date: 2023-08-28T13:37Z
        /// */
        ///(function (global, factory) {
        ///
        ///	&quot;use strict&quot;;
        ///
        ///	if (typeof module === &quot;object&quot; &amp;&amp; typeof module.exports === &quot;object&quot;) {
        ///
        ///		// For CommonJS and CommonJS-like environments where a proper `window`
        ///		// is present, execute the factory and get jQuery.
        ///		// For environments that  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_js {
            get {
                return ResourceManager.GetString("jquery_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;compatibilityLevel&quot;: 1604,
        ///  &quot;model&quot;: {
        ///    &quot;annotations&quot;: [
        ///      {
        ///        &quot;name&quot;: &quot;__PBI_TimeIntelligenceEnabled&quot;,
        ///        &quot;value&quot;: &quot;1&quot;
        ///      }
        ///    ],
        ///    &quot;collation&quot;: &quot;Latin1_General_100_BIN2_UTF8&quot;,
        ///    &quot;culture&quot;: &quot;en-US&quot;,
        ///    &quot;cultures&quot;: [
        ///      {
        ///        &quot;name&quot;: &quot;en-US&quot;,
        ///        &quot;linguisticMetadata&quot;: {
        ///          &quot;content&quot;: {
        ///            &quot;DynamicImprovement&quot;: &quot;HighConfidence&quot;,
        ///            &quot;Language&quot;: &quot;en-US&quot;,
        ///            &quot;Version&quot;: &quot;1.0.0&quot;
        ///          },
        ///          &quot;contentType&quot;: &quot;json&quot;
        ///        }
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string model_direct_lake_mode_bim {
            get {
                return ResourceManager.GetString("model_direct_lake_mode_bim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;compatibilityLevel&quot;: 1567,
        ///  &quot;model&quot;: {
        ///    &quot;annotations&quot;: [
        ///      {
        ///        &quot;name&quot;: &quot;__PBI_TimeIntelligenceEnabled&quot;,
        ///        &quot;value&quot;: &quot;0&quot;
        ///      },
        ///      {
        ///        &quot;name&quot;: &quot;PBIDesktopVersion&quot;,
        ///        &quot;value&quot;: &quot;2.122.746.0 (23.10)&quot;
        ///      },
        ///      {
        ///        &quot;name&quot;: &quot;PBI_QueryOrder&quot;,
        ///        &quot;value&quot;: &quot;[\&quot;Products\&quot;,\&quot;CSV_FILE_ROOT\&quot;,\&quot;Customers\&quot;,\&quot;Sales\&quot;,\&quot;Invoices\&quot;]&quot;
        ///      },
        ///      {
        ///        &quot;name&quot;: &quot;PBI_ProTooling&quot;,
        ///        &quot;value&quot;: &quot;[\&quot;DevMode\&quot;]&quot;
        ///      }
        ///    ],
        ///    &quot;culture&quot;:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string model_import_mode_bim {
            get {
                return ResourceManager.GetString("model_import_mode_bim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // powerbi-client v2.22.3
        ///// Copyright (c) Microsoft Corporation.
        ///// Licensed under the MIT License.
        ///(function webpackUniversalModuleDefinition(root, factory) {
        ///  if (typeof exports === &apos;object&apos; &amp;&amp; typeof module === &apos;object&apos;)
        ///    module.exports = factory();
        ///  else if (typeof define === &apos;function&apos; &amp;&amp; define.amd)
        ///    define([], factory);
        ///  else if (typeof exports === &apos;object&apos;)
        ///    exports[&quot;powerbi-client&quot;] = factory();
        ///  else
        ///    root[&quot;powerbi-client&quot;] = factory();
        ///})(this, () =&gt; {
        ///  return /**** [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string powerbi_js {
            get {
                return ResourceManager.GetString("powerbi_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;config&quot;: &quot;{\&quot;version\&quot;:\&quot;5.47\&quot;,\&quot;themeCollection\&quot;:{\&quot;baseTheme\&quot;:{\&quot;name\&quot;:\&quot;CY23SU08\&quot;,\&quot;version\&quot;:\&quot;5.48\&quot;,\&quot;type\&quot;:2}},\&quot;activeSectionIndex\&quot;:0,\&quot;bookmarks\&quot;:[{\&quot;displayName\&quot;:\&quot;GoToSalesSummaryPage\&quot;,\&quot;name\&quot;:\&quot;Bookmark12c9fe861747d85763a6\&quot;,\&quot;explorationState\&quot;:{\&quot;version\&quot;:\&quot;1.3\&quot;,\&quot;activeSection\&quot;:\&quot;ReportSection\&quot;,\&quot;sections\&quot;:{\&quot;ReportSection\&quot;:{\&quot;visualContainers\&quot;:{\&quot;77df46c21535b48f2e73\&quot;:{\&quot;filters\&quot;:{\&quot;byExpr\&quot;:[{\&quot;type\&quot;:\&quot;Advanced\&quot;,\&quot;expression\&quot;:{\&quot;Column\&quot;:{\&quot;Expression\&quot;:{\&quot;Sourc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sales_report_json {
            get {
                return ResourceManager.GetString("sales_report_json", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body {
        ///  background-color: #EEEEEE;
        ///}.
        /// </summary>
        internal static string styles_css {
            get {
                return ResourceManager.GetString("styles_css", resourceCulture);
            }
        }
    }
}
